"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9640],{2112:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"commands/Docker","title":"Docker","description":"Docker Process","source":"@site/docs/commands/Docker.md","sourceDirName":"commands","slug":"/commands/Docker","permalink":"/docs/commands/Docker","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Docker","title":"Docker","sidebar_label":"Docker"},"sidebar":"tutorialSidebar","previous":{"title":"Directory Ownership","permalink":"/docs/commands/Directory Ownership"},"next":{"title":"Fish Shell","permalink":"/docs/commands/Fish Shell"}}');var r=o(4848),i=o(8453);const s={id:"Docker",title:"Docker",sidebar_label:"Docker"},c=void 0,d={},l=[{value:"Dockerfile",id:"dockerfile",level:2},{value:"Docker Image",id:"docker-image",level:2},{value:"List all docker images",id:"list-all-docker-images",level:3},{value:"Docker image hardware usage",id:"docker-image-hardware-usage",level:3},{value:"Remove a docker image",id:"remove-a-docker-image",level:3},{value:"Zipping docker image",id:"zipping-docker-image",level:3},{value:"Load an image from Zipped file",id:"load-an-image-from-zipped-file",level:3},{value:"Docker Image Prune",id:"docker-image-prune",level:3},{value:"Docker Container",id:"docker-container",level:2},{value:"List all docker containers (with their status)",id:"list-all-docker-containers-with-their-status",level:3},{value:"Enter into the shell of a docker container",id:"enter-into-the-shell-of-a-docker-container",level:3},{value:"Docker Container Prune",id:"docker-container-prune",level:3},{value:"Docker Compose",id:"docker-compose",level:2},{value:"<code>--build</code> option in docker compose",id:"--build-option-in-docker-compose",level:3}];function t(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Docker Process",src:o(4441).A+"",width:"1368",height:"396"})}),"\n",(0,r.jsxs)(n.p,{children:["Docker Process (from ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=oGPjzCBZGzg",children:"https://www.youtube.com/watch?v=oGPjzCBZGzg"})}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Good videos to understand docker: ",(0,r.jsx)(n.a,{href:"https://www.youtube.com/playlist?list=PLlrv2-wV8WA1eFpbPSIcLLYqJxZSPrISZ",children:"Monis Yousuf"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,r.jsx)(n.p,{children:"A YAML (.yml) file for building a Docker Image. It can installs dependencies, copy your code, expose ports, and run the app"}),"\n",(0,r.jsx)(n.p,{children:"A sample dockerfile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: "3.9" # Docker Compose file format version\n\nservices:\n  ollama: # "ollama" LLM Backend API Server\n    image: ollama/ollama  # Official Ollama image\n    container_name: ollama\n    ports:\n      - "11400:11434"  # Ollama API port; Map port 11400 of the host to port 11434 of the container\n    volumes:\n      - ollama_data:/root/.ollama # Persistent storage for downloaded models\n\t  \t\t\t  # \'/root/.ollama\' is the model storage location inside the container.\n    restart: unless-stopped # Automatically restart the container unless it is explicitly stopped by the user.\n    \t\t\t    # This is useful for ensuring Ollama is always running after reboots or crashes.\n\n  openwebui: # "openwebui" Web-based Frontend for LLM\n    image: ghcr.io/open-webui/open-webui:main  # Official OpenWebUI image\n    container_name: openwebui\n    ports:\n      - "3000:8080"  # Host port 3000 maps to OpenWebUI\'s internal port 8080\n    environment:\n      - OLLAMA_API_BASE_URL=http://ollama:11434  # Connect OpenWebUI to Ollama backend\n    depends_on:\n      - ollama  # Ensure Ollama starts before OpenWebUI\n    restart: unless-stopped\n\nvolumes:\n  ollama_data:  # Persistent volume for Ollama models\n'})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docker-image",children:"Docker Image"}),"\n",(0,r.jsx)(n.p,{children:"A read-only blueprint for making Docker Container. Think of it as a food recipe"}),"\n",(0,r.jsx)(n.h3,{id:"list-all-docker-images",children:"List all docker images"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker images\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sample Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"REPOSITORY                      TAG       IMAGE ID       CREATED         SIZE\nghcr.io/open-webui/open-webui   main      21bb7e0892cf   2 weeks ago     4.78GB\nollama/ollama                   latest    2b23bc85a2d2   5 weeks ago     2.27GB\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"docker-image-hardware-usage",children:"Docker image hardware usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker stats\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sample Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"CONTAINER ID   NAME         CPU %    MEM USAGE / LIMIT       MEM %   NET I/O           BLOCK I/O      PIDS\n21bb7e0892cf   open-webui   0.12%    12.34MiB  /  1.953GiB   0.62%   1.23kB / 4.56kB   7.89MB / 0B    5\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"remove-a-docker-image",children:"Remove a docker image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo docker rmi -f <image_id>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example: ```bash\nsudo docker rmi -f ffc5b597096e"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n* If an image is not removable due to some errors like\n\t\n> Error response from daemon: conflict: unable to delete image_id (cannot be forced) - image has dependent child images\n\nThen use the image name with tag in the format `image_name:tag`\n\n> Always check what the error is saying and see if it is conveying something important.\n\nExample: `sudo docker rmi -f anaconda/conda:cpu`\n\n<br />\n\n### Recreate new image after making changes to exisitng image\n\nLet\'s say you have a container \'bd91ca3ca3c8\' running, and you want to create a new image after you made changes in the container. Generating another image will allow you to preserve your changes.\n\nIn that case you can run:\n\n```bash\ndocker commit -p -a "author_here" -m "your_message" bd91ca3ca3c8 name_of_new_image\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Example: ",(0,r.jsx)(n.code,{children:'docker commit -p -a "Ajay" -m "edit in frontend" bd91ca3ca3c8 OWUI_new'})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-p"})," pauses the container while commit command is building the new image."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-a"})," supply author information of the new image."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-m"})," add a comment just as in the Git."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"zipping-docker-image",children:"Zipping docker image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker save -o <tar_filename.tar> <image_name:tag>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Example ",(0,r.jsx)(n.code,{children:"docker save -o ollama.tar ollama/ollama:latest"})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"load-an-image-from-zipped-file",children:"Load an image from Zipped file"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker load -i <name_of_archive_file_with_extension>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Example ",(0,r.jsx)(n.code,{children:"docker load -i ollama.tar"})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"docker-image-prune",children:"Docker Image Prune"}),"\n",(0,r.jsxs)(n.p,{children:["Before ",(0,r.jsx)(n.code,{children:"docker prune"}),", ",(0,r.jsx)(n.code,{children:"docker images"})," output:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ajay@ajay:~$ docker images\nREPOSITORY                      TAG                  IMAGE ID       CREATED         SIZE\n<none>                          <none>               a395134a60ee   3 hours ago     461MB\n<none>                          <none>               718fe7aef004   3 hours ago     461MB\n<none>                          <none>               c2f8543ff7d0   3 hours ago     461MB\npython                          3.11.13-slim         2ba2e944f9cd   2 weeks ago     125MB\npipeline                        latest               823b5c57ed73   3 weeks ago     4.01GB\nghcr.io/open-webui/open-webui   main                 ca42d907c22d   3 weeks ago     4.78GB\npython                          3.11-slim-bookworm   f3bfd8e9386c   2 months ago    130MB\nubuntu                          latest               a04dc4851cbc   7 months ago    78.1MB\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker image prune -f\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ajay@ajay:~$ docker image prune -f \nDeleted Images:\ndeleted: sha256:718fe7aef004f33ca8a89507370bdee3a1c37323a1562fbb0f80e57b23b5e93d\ndeleted: sha256:d9db36184582b1f257a4e3b73be9d3db7fa29efb022c767527dd3ed895d9250c\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After ",(0,r.jsx)(n.code,{children:"docker prune"}),", ",(0,r.jsx)(n.code,{children:"docker images"})," output:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Total reclaimed space: 1.009GB\najay@ajay:~$ docker images\nREPOSITORY                      TAG                  IMAGE ID       CREATED         SIZE\npython                          3.11.13-slim         2ba2e944f9cd   2 weeks ago     125MB\npipeline                        latest               823b5c57ed73   3 weeks ago     4.01GB\nghcr.io/open-webui/open-webui   main                 ca42d907c22d   3 weeks ago     4.78GB\npython                          3.11-slim-bookworm   f3bfd8e9386c   2 months ago    130MB\nubuntu                          latest               a04dc4851cbc   7 months ago    78.1MB\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docker-container",children:"Docker Container"}),"\n",(0,r.jsx)(n.p,{children:"A running instance of an image. Think of it is a food made using a recipe"}),"\n",(0,r.jsx)(n.h3,{id:"list-all-docker-containers-with-their-status",children:"List all docker containers (with their status)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker ps -a\n"})}),"\n",(0,r.jsx)(n.p,{children:"Sample Output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'CONTAINER ID   IMAGE                                COMMAND           CREATED       STATUS                 PORTS                                         NAMES\na839cf0e8ee9   ghcr.io/open-webui/open-webui:main   "bash start.sh"   3 hours ago   Up 3 hours (healthy)   0.0.0.0:3000->8080/tcp, [::]:3000->8080/tcp   open-webui\n'})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"enter-into-the-shell-of-a-docker-container",children:"Enter into the shell of a docker container"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo docker exec -it <container_id> /bin/bash\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example: ```bash\nsudo docker exec -it ffc5b597096e /bin/bash"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\nNote: There won't be any packages (like nano, vim) installed inside the shell of a docker container\n\n<br />\n\n### Remove a docker container\n\n```bash\ndocker rm -f <container_id>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example: ```bash\nsudo rmi -f c22e695dfda2"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n<br />\n\n### Display container logs\n\n```bash\ndocker logs -f $(docker ps -q -f name=<container_name>)\n\nOR\n\ndocker logs <container_name>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Example: ",(0,r.jsx)(n.code,{children:"docker logs -f $(docker ps -q -f name=open-webui)"})," or ",(0,r.jsx)(n.code,{children:"docker logs open-webui"})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h3,{id:"docker-container-prune",children:"Docker Container Prune"}),"\n",(0,r.jsxs)(n.p,{children:["Delete all ",(0,r.jsx)(n.code,{children:"Exited"})," & ",(0,r.jsx)(n.code,{children:"Created"})," Containers"]}),"\n",(0,r.jsxs)(n.p,{children:["Before ",(0,r.jsx)(n.code,{children:"docker prune"}),", ",(0,r.jsx)(n.code,{children:"docker ps -a"})," output:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'CONTAINER ID   IMAGE                                COMMAND                  CREATED       STATUS                  PORTS                                                                                          NAMES\nc32f661bce29   file:latest                          "/bin/sh -c \'uvicorn\u2026"   6 days ago    Exited (1) 6 days ago   \n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker container prune -f\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After ",(0,r.jsx)(n.code,{children:"docker prune"}),", ",(0,r.jsx)(n.code,{children:"docker ps -a"})," output:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'CONTAINER ID   IMAGE                                COMMAND                  CREATED       STATUS                  PORTS                                                                                          NAMES\nc32f661bce29   file:latest                          "/bin/sh -c \'uvicorn\u2026"   6 days ago    Exited (1) 6 days ago   \n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,r.jsxs)(n.p,{children:["A tool for defining and running multi-container Docker applications using a YAML file (usually docker-compose.yml, not strict, it can be ajay-compose.yml or any name [",(0,r.jsx)(n.a,{href:"https://youtu.be/BTXfR76WmCw?si=1NPzu-JUAZEEo64j&t=309",children:"see this"}),"])"]}),"\n",(0,r.jsxs)(n.p,{children:["Think like you have a dockerfile like the ",(0,r.jsx)(n.a,{href:"/docs/commands/Docker#dockerfile",children:"one above"}),"; If you make two separate dockerfiles for the Ollama and Open WebUI, you need to maintain them separately. But with docker compose, you can define them in a single file and run with a single command like ",(0,r.jsx)(n.code,{children:"docker compose up"})]}),"\n",(0,r.jsxs)(n.h3,{id:"--build-option-in-docker-compose",children:[(0,r.jsx)(n.code,{children:"--build"})," option in docker compose"]}),"\n",(0,r.jsxs)(n.p,{children:["A command like ",(0,r.jsx)(n.code,{children:"docker compose up --build"})," will rebuild new images whenever you run this command. Without the ",(0,r.jsx)(n.code,{children:"--build"}),", the docker will reuse the old image, where your new changes are not reflected."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},4441:(e,n,o)=>{o.d(n,{A:()=>a});const a=o.p+"assets/images/Docker Process-e4325e0dcffb1043c44b61d470bdb4bb.jpg"},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var a=o(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);