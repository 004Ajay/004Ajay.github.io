"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3440],{4523:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"gists/commit_from_cmd","title":"Commit from Command Prompt (cmd)","description":"--\x3e Adds new files to git staging area: git add .","source":"@site/docs/gists/commit_from_cmd.md","sourceDirName":"gists","slug":"/gists/commit_from_cmd","permalink":"/docs/gists/commit_from_cmd","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"commit_from_cmd","title":"Commit from Command Prompt (cmd)","sidebar_label":"Commit from Command Prompt"},"sidebar":"tutorialSidebar","previous":{"title":"Clear Git Commit History","permalink":"/docs/gists/clear_git_commit_history"},"next":{"title":"Commit Single File to GitHub","permalink":"/docs/gists/commit_single_file_to_github"}}');var m=o(4848),n=o(8453);const s={id:"commit_from_cmd",title:"Commit from Command Prompt (cmd)",sidebar_label:"Commit from Command Prompt"},r=void 0,c={},d=[{value:"Sample Commands",id:"sample-commands",level:3},{value:"Fetch and download content from Remote Repository (GitHub) to your Local System (git pull)",id:"fetch-and-download-content-from-remote-repository-github-to-your-local-system-git-pull",level:3}];function l(t){const e={code:"code",h3:"h3",hr:"hr",p:"p",strong:"strong",...(0,n.R)(),...t.components};return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)(e.p,{children:["--\x3e Adds new files to git staging area: ",(0,m.jsx)(e.code,{children:"git add ."})]}),"\n",(0,m.jsxs)(e.p,{children:["--\x3e Commit the changes with new commit message: ",(0,m.jsx)(e.code,{children:'git commit -m "[commit message]"'})]}),"\n",(0,m.jsxs)(e.p,{children:["--\x3e Confirm the commit, aka PUSH to GitHub: ",(0,m.jsx)(e.code,{children:"git push origin [banch name]"})]}),"\n",(0,m.jsx)(e.h3,{id:"sample-commands",children:"Sample Commands"}),"\n",(0,m.jsx)(e.p,{children:"D: ASUS> git add ."}),"\n",(0,m.jsx)(e.p,{children:'D: ASUS> git commit -m "Initial Commit"'}),"\n",(0,m.jsx)(e.p,{children:"D: ASUS> git push origin main"}),"\n",(0,m.jsx)(e.hr,{}),"\n",(0,m.jsx)(e.h3,{id:"fetch-and-download-content-from-remote-repository-github-to-your-local-system-git-pull",children:"Fetch and download content from Remote Repository (GitHub) to your Local System (git pull)"}),"\n",(0,m.jsxs)(e.p,{children:["--\x3e Pulls updated files to local system: ",(0,m.jsx)(e.code,{children:"git pull"})]}),"\n",(0,m.jsx)(e.p,{children:(0,m.jsx)(e.strong,{children:"Sample Command"})}),"\n",(0,m.jsx)(e.p,{children:"D: ASUS> git pull"})]})}function a(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,m.jsx)(e,{...t,children:(0,m.jsx)(l,{...t})}):l(t)}},8453:(t,e,o)=>{o.d(e,{R:()=>s,x:()=>r});var i=o(6540);const m={},n=i.createContext(m);function s(t){const e=i.useContext(n);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(m):t.components||m:s(t.components),i.createElement(n.Provider,{value:e},t.children)}}}]);