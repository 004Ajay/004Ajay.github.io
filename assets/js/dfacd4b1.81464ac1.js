"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9866],{3081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"gists/Linux_Context_Menu_Edit","title":"Linux Context Menu Editing","description":"New addition in linux context menu (options that comes on right-click)","source":"@site/docs/gists/Linux_Context_Menu_Edit.md","sourceDirName":"gists","slug":"/gists/Linux_Context_Menu_Edit","permalink":"/docs/gists/Linux_Context_Menu_Edit","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Linux_Context_Menu_Edit","title":"Linux Context Menu Editing","sidebar_label":"Linux Context Menu Editing"},"sidebar":"tutorialSidebar","previous":{"title":"Deep Learning Frameworks","permalink":"/docs/gists/Deep_Learning_Frameworks"},"next":{"title":"TF Neural Net","permalink":"/docs/gists/NeuralNet"}}');var s=t(4848),o=t(8453);const r={id:"Linux_Context_Menu_Edit",title:"Linux Context Menu Editing",sidebar_label:"Linux Context Menu Editing"},d=void 0,l={},c=[{value:"New addition in linux context menu (options that comes on right-click)",id:"new-addition-in-linux-context-menu-options-that-comes-on-right-click",level:3}];function a(e){const n={code:"code",em:"em",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"new-addition-in-linux-context-menu-options-that-comes-on-right-click",children:"New addition in linux context menu (options that comes on right-click)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Story:"})," I do 'Open with VS Code' everytime to edit, view, or inspect code. But unlike Windows, in linux, when we install VS Code this option doesn't come automatically. So we need to add it manually by editing some files. Let's go and understand which all files and what edits need to be done."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Here I am going to add two options ",(0,s.jsx)(n.strong,{children:"Open in VS Code"})," (for opening a single file in VS Code) & ",(0,s.jsx)(n.strong,{children:"Open Folder in VS Code"})," (to open the complete parent folder of a file) --\x3e all these are done for the current user only."]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. Open in VS Code"})}),"\n",(0,s.jsx)(n.p,{children:"1.1. Open a terminal"}),"\n",(0,s.jsxs)(n.p,{children:["1.2. Go to ",(0,s.jsx)(n.code,{children:"~/.local/share/nautilus/scripts"})," and create a file named ",(0,s.jsx)(n.code,{children:"Open in VS Code"}),", the name of the file will be displayed as the name of option later in the context menu."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'nano ~/.local/share/nautilus/scripts/"Open in VS Code"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Inside the file paste:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\ncode "$@"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Save the code using ",(0,s.jsx)(n.code,{children:"Ctrl+X"})," ",(0,s.jsx)(n.code,{children:"Y"})," ",(0,s.jsx)(n.code,{children:"Enter"})]}),"\n",(0,s.jsxs)(n.p,{children:["1.3. Now change the file to an executable using ",(0,s.jsx)(n.code,{children:"chmod"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'chmod +x ~/.local/share/nautilus/scripts/"Open in VS Code"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["1.4. Restart the GNOME desktop environment file manager ",(0,s.jsx)(n.code,{children:"Nautilus"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nautilus -q\n"})}),"\n",(0,s.jsxs)(n.p,{children:["1.5. Now go to any folder, ",(0,s.jsx)(n.code,{children:"right-click any file"})," to see the option ",(0,s.jsx)(n.code,{children:"Scripts"})," and inside it ",(0,s.jsx)(n.code,{children:"Open in VS Code"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Open Folder in VS Code"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"I don't think you need a detailed instruction for this step, as there is a small change in the shell script only"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'nano ~/.local/share/nautilus/scripts/"Open in VS Code"\r\n\r\n#!/bin/bash\r\n\r\nfor path in "$@"; do\r\n    if [ -d "$path" ]; then\r\n        code "$path"\r\n    else\r\n        # If it\'s a file, open its parent directory\r\n        code "$(dirname "$path")"\r\n    fi\r\ndone\r\n\r\nchmod +x ~/.local/share/nautilus/scripts/"Open in VS Code"\r\n\r\nnautilus -q\n'})}),"\n",(0,s.jsx)(n.p,{children:"That's all!!!"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);