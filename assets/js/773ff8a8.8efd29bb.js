"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8711],{5788:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"gists/clear_git_commit_history","title":"Clear Git Commit History","description":"On you computer, go to the local repository cloned from github, which you use to push commits to github","source":"@site/docs/gists/clear_git_commit_history.md","sourceDirName":"gists","slug":"/gists/clear_git_commit_history","permalink":"/docs/gists/clear_git_commit_history","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"clear_git_commit_history","title":"Clear Git Commit History","sidebar_label":"Clear Git Commit History"},"sidebar":"tutorialSidebar","previous":{"title":"Gists","permalink":"/docs/category/gists"},"next":{"title":"Commit from Command Prompt","permalink":"/docs/gists/commit_from_cmd"}}');var i=n(4848),o=n(8453);const s={id:"clear_git_commit_history",title:"Clear Git Commit History",sidebar_label:"Clear Git Commit History"},c=void 0,l={},d=[];function a(t){const e={code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"On you computer, go to the local repository cloned from github, which you use to push commits to github"}),"\n",(0,i.jsx)(e.p,{children:"Open the cmd of that folder and do the things below:"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsxs)(e.strong,{children:["Checkout to another branch named ",(0,i.jsx)(e.code,{children:"latest_branch"})]})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git checkout --orphan latest_branch\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Add all the files"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git add -A\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Commit the changes"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'git commit -am "commit message"\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Delete the branch"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git branch -D main\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Rename the current branch to main"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git branch -m main\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Finally, force update your repository"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"git push -f origin main\n"})}),"\n",(0,i.jsx)(e.p,{children:"PS: this will not keep your old commit history around"})]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(a,{...t})}):a(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>c});var r=n(6540);const i={},o=r.createContext(i);function s(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);