"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4276],{7349:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"commands/Nginx Reverse Proxy","title":"Nginx Reverse Proxy","description":"NGINX Reverse Proxy on Port 80 with llm.com","source":"@site/docs/commands/Nginx_Reverse_Proxy.md","sourceDirName":"commands","slug":"/commands/Nginx Reverse Proxy","permalink":"/docs/commands/Nginx Reverse Proxy","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"Nginx Reverse Proxy","title":"Nginx Reverse Proxy","sidebar_label":"Nginx Reverse Proxy"},"sidebar":"tutorialSidebar","previous":{"title":"Miscellaneous","permalink":"/docs/commands/Miscellaneous"},"next":{"title":"Ollama","permalink":"/docs/commands/Ollama"}}');var o=s(4848),i=s(8453);const l={id:"Nginx Reverse Proxy",title:"Nginx Reverse Proxy",sidebar_label:"Nginx Reverse Proxy"},a=void 0,t={},c=[{value:"NGINX Reverse Proxy on Port 80 with llm.com",id:"nginx-reverse-proxy-on-port-80-with-llmcom",level:2},{value:"1. Stop and Disable any apps working on Port 80 (this port is normally used for web communication)",id:"1-stop-and-disable-any-apps-working-on-port-80-this-port-is-normally-used-for-web-communication",level:3},{value:"2. Install Nginx (if not already installed)",id:"2-install-nginx-if-not-already-installed",level:3},{value:"3. Configure <code>/etc/hosts</code> for Local Domain Resolution",id:"3-configure-etchosts-for-local-domain-resolution",level:3},{value:"4. Create a Reverse Proxy Config for <code>llm.com</code>",id:"4-create-a-reverse-proxy-config-for-llmcom",level:3},{value:"5. Enable the Config",id:"5-enable-the-config",level:3},{value:"6. Test Nginx Config and Restart",id:"6-test-nginx-config-and-restart",level:3},{value:"7. Visit Your App",id:"7-visit-your-app",level:3},{value:"8. Add More Apps",id:"8-add-more-apps",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"nginx-reverse-proxy-on-port-80-with-llmcom",children:"NGINX Reverse Proxy on Port 80 with llm.com"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," This will work only on your current system under your network, but this can save you from typing ",(0,o.jsx)(n.code,{children:"192....230:8080"})," for accessing your locally hosted app."]})}),"\n",(0,o.jsx)(n.h3,{id:"1-stop-and-disable-any-apps-working-on-port-80-this-port-is-normally-used-for-web-communication",children:"1. Stop and Disable any apps working on Port 80 (this port is normally used for web communication)"}),"\n",(0,o.jsx)(n.p,{children:"For my case, Apache2 was running on Port 80"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop apache2\r\nsudo systemctl disable apache2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-install-nginx-if-not-already-installed",children:"2. Install Nginx (if not already installed)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt update\r\nsudo apt install nginx -y\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"3-configure-etchosts-for-local-domain-resolution",children:["3. Configure ",(0,o.jsx)(n.code,{children:"/etc/hosts"})," for Local Domain Resolution"]}),"\n",(0,o.jsxs)(n.p,{children:["This tells your system to resolve ",(0,o.jsx)(n.code,{children:"llm.com"})," locally."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/hosts\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Add the line ",(0,o.jsx)(n.code,{children:"127.0.0.1 llm.com"})]}),"\n",(0,o.jsx)(n.p,{children:"If you're on a different machine than the one running Nginx, use the Nginx server's IP instead."}),"\n",(0,o.jsxs)(n.h3,{id:"4-create-a-reverse-proxy-config-for-llmcom",children:["4. Create a Reverse Proxy Config for ",(0,o.jsx)(n.code,{children:"llm.com"})]}),"\n",(0,o.jsx)(n.p,{children:"Create a new config file:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/nginx/sites-available/llm.com\n"})}),"\n",(0,o.jsx)(n.p,{children:"Paste this config:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"server {\r\n    listen 80;\r\n    server_name llm.com;\r\n\r\n    location / {\r\n        proxy_pass http://192.168.1.230:8080;  # replace with your app's actual IP and port\r\n        proxy_set_header Host $host;\r\n        proxy_set_header X-Real-IP $remote_addr;\r\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header X-Forwarded-Proto $scheme;\r\n    }\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"5-enable-the-config",children:"5. Enable the Config"}),"\n",(0,o.jsxs)(n.p,{children:["Link it into ",(0,o.jsx)(n.code,{children:"sites-enabled"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo ln -s /etc/nginx/sites-available/llm.com /etc/nginx/sites-enabled/\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Optional:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Remove the default site to avoid conflicts:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo rm /etc/nginx/sites-enabled/default\n"})}),"\n",(0,o.jsx)(n.h3,{id:"6-test-nginx-config-and-restart",children:"6. Test Nginx Config and Restart"}),"\n",(0,o.jsx)(n.p,{children:"Check for syntax errors:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo nginx -t\n"})}),"\n",(0,o.jsx)(n.p,{children:"If it says syntax is ok and test is successful, then restart Nginx:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart nginx\n"})}),"\n",(0,o.jsx)(n.h3,{id:"7-visit-your-app",children:"7. Visit Your App"}),"\n",(0,o.jsxs)(n.p,{children:["Open your browser and go to ",(0,o.jsx)(n.code,{children:"http://llm.com"})]}),"\n",(0,o.jsxs)(n.p,{children:["It should show the app running on ",(0,o.jsx)(n.code,{children:"192.168.1.230:8080"}),", now proxied cleanly by Nginx!"]}),"\n",(0,o.jsx)(n.h3,{id:"8-add-more-apps",children:"8. Add More Apps"}),"\n",(0,o.jsx)(n.p,{children:"Add More Domains Easily by repeating steps 4\u20137 with new configs, example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"dbui.com \u2192 192.168.1.231:3000\r\n\r\nadminportal.com \u2192 192.168.1.232:5000\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Each with their own file in ",(0,o.jsx)(n.code,{children:"/etc/nginx/sites-available/"})," and an entry in ",(0,o.jsx)(n.code,{children:"/etc/hosts"})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);